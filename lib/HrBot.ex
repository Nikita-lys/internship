defmodule HrBot do
  @moduledoc """
  Мы радуемся приходу каждого нового сотрудника и представляем его команде в главном канале корпоративного чата.
  Тебе нужно написать модуль/класс, который будет получать на вход два параметра (имя, должность) и выдавать сообщение
  вида: “Поприветствуйте Андрея, нашего нового UX/UI-дизайнера!”. Если должность пока что неизвестна, то
  вместо неё должно выводиться слово “сотрудника”. Вызов пусть выглядит вот так: HrBot.hello(string, string)
  ...
  """

  @doc """
  Переводим имена в винительный падеж
  """
  defp name_in_true_form(name) do
    # Берём последний символ в имени
    last_char = String.slice(name, -1..-1)
    # Отрезаем последний символ в имени
    new_name = String.slice(name, 0..-2)
    cond do
      last_char == "а" -> new_name <> "у"
      last_char == "я" -> new_name <> "ю"
      last_char == "й" -> new_name <> "я"
      last_char == "ь" -> new_name <> "я"
      true -> name <> "а"
    end
  end

  @doc """
  Переводим должности в винительный падеж
  """
  defp post_in_true_form(post) do
    cond do
      # Если в post есть слово "Разработчик", то меняем строку на "разработчика" <> всё остальное
      Regex.scan(~r/Разработчик/i, post) |> length == 1 -> "разработчика" <> String.slice(post, String.length("Разработчик")..-1)
      # Если в post есть слово "Младший", то меняем строку на "младшего" <> всё остальное <> a
      Regex.scan(~r/Младший/i, post) |> length == 1 -> "младшего" <> String.slice(post, String.length("Младший")..-1) <> "а"
      # Для всех отсальных должностей добавляем символ "а"
      true -> post <> "а"
    end

  end

  @doc """
  Главная функция по приветствованию нового сотрудника.
  """
  def hello(name, post \\ "сотрудник") do
    "Поприветствуйте #{name_in_true_form(name)}, нашего нового #{post_in_true_form(post)}!"
  end
end
